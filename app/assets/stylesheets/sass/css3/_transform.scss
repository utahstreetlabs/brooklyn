// CSS Transform and Transform-Origin

// Apply a transform sent as a complete string
@mixin apply-transform($transform: false) {
  transform: $transform;
  -webkit-transform: $transform;
  -moz-transform: $transform; }

// Apply a transform-origin sent as a complete string
@mixin apply-origin($origin: false) {
  transform-origin: $origin;
  -webkit-transform-origin: $origin;
  -moz-transform-origin: $origin; }

// transform-origin requires x and y coordinates
//  - only applies the coordinates if they are there
//    so that it can be called by scale, rotate and skew safely
@mixin transform-origin($originx: 50%, $originy: 50%) {
  $origin: false;
  @if $originx and $originy {
    $origin: unquote("#{$originx} #{$originy}"); }
  @else if $originx {
    $origin: #{$originx}; }
  @else if $originy {
    $origin: #{$originy}; }
  @if $origin {
    @include apply-origin($origin); } }

// A full transform mixin with everything you could want
//  - including origin adjustments if you want them
//  - scale, rotate and skew don't require units
//    scale takes a multiplier, rotate and skew take degrees
@mixin transform($scale: 1, $rotate: 0, $transx: 0, $transy: 0, $skewx: 0, $skewy: 0, $originx: false, $originy: false) {
  $transform: unquote("scale(#{$scale}) rotate(#{$rotate}deg) translate(#{$transx}, #{$transy}) skew(#{$skewx}deg, #{$skewy}deg)");
  @include apply-transform($transform);
  @include transform-origin($originx, $originy); }